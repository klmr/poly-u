#!/usr/bin/env Rscript

sys = modules::import('klmr/sys')

sys$run({
    args = sys$cmd$parse(arg('taginfo', 'input taginfo file'))

    io = modules::import('ebi-predocs/ebits/io')
    modules::import_package('dplyr', attach = TRUE)
    tidyr = modules::import_package('tidyr')

    taginfo = io$read_table(args$taginfo, header = TRUE) %>%
        mutate(`RNA source` = ifelse(grepl('ORV', Gene, fixed = TRUE), Gene, 'host'))

    modules::import_package('ggplot2', attach = TRUE)

    pa_density_plot = ggplot() +
        theme_bw() +
        aes(x = `pA length`, y = ..density..) +
        geom_freqpoly(binwidth = 6, size = 1) +
        scale_x_continuous(limits = c(0, 85), expand = c(0, 0)) +
        labs(x = 'poly-A length', y = 'Density of reads (arb. unit)')

    #+ pa-density-host
    pa_density_plot %+%
        filter(taginfo, `RNA source` == 'host') +
        aes(color = paste(Type, Treatment)) +
        labs(color = 'Condition')

    ggsave('data/plots/pA-density-host.pdf')

    #+ viral-pa-density
    darken = function (cols, factor = 2)
        rgb(t(col2rgb(cols) / factor), maxColorValue = 255)

    viral_colors = data_frame(`RNA source` = relevel(factor(unique(taginfo$`RNA source`)), 'host'),
                              WT = c('gray', 'chocolate3', 'cadetblue3')) %>%
        mutate(KO = darken(WT, 1.5)) %>%
        mutate(None = WT) %>%
        tidyr$gather(Type, Color, -`RNA source`) %>%
        {setNames(.$Color, paste(.$Type, .$`RNA source`))} %>%
        setNames(gsub('None ', '', names(.)))

    pa_density_plot %+%
        filter(taginfo, Treatment == 'Infected') +
        aes(color = `RNA source`, linetype = Type) +
        scale_color_manual(values = viral_colors) +
        coord_cartesian(ylim = c(0, 0.05)) +
        labs(color = 'RNA source', linetype = 'Type')

    ggsave('data/plots/viral-pa-density.pdf')

    #+ viral-infected-uninfected
    pa_density_plot %+%
        taginfo +
        aes(color = `RNA source`, linetype = Treatment) +
        scale_color_manual(values = viral_colors) +
        coord_cartesian(ylim = c(0, 0.05)) +
        labs(color = 'RNA source', linetype = 'Infection status')

    ggsave('data/plots/viral-infected-uninfected.pdf')

    #+ modifications

    # The first version of this used `rle`, but was much too slow and memory
    # intensive.
    modifications = function(seq) {
        first_length = function (str) {
            if (is.na(str) || ! nzchar(str))
                return(0L)

            first_char = substr(str, 1L, 1L)
            pos = 2L
            while (substr(str, pos, pos) == first_char) {
                pos = pos + 1L
            }
            pos - 1L
        }

        data_frame(ModLength = vapply(seq, first_length, integer(1)),
                   Mod = substr(seq, 1L, 1L))
    }

    taginfo = taginfo %>%
        do(modifications(.$Mod)) %>%
        bind_cols(select(taginfo, -Mod), .)
})

# vim: ft=r
