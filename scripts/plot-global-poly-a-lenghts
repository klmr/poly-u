#!/usr/bin/env Rscript

sys = modules::import('klmr/sys')
modules::import('klmr/functional/lambda')

sys$run({
    args = sys$cmd$parse(arg('summary', 'summary table input file'),
                         opt('o', 'plot', 'plot output filename'))

    io = modules::import('ebi-predocs/ebits/io')
    modules::import_package('dplyr', attach = TRUE)
    modules::import_package('ggplot2', attach = TRUE)
    tidyr = modules::import_package('tidyr')
    modules::import('./runmean', attach = TRUE)
    modules::import('./theme')

    lengths = io$read_table(args$summary, header = TRUE) %>%
        filter(Treatment == 'Uninfected', Source == 'host') %>%
        select(-Treatment, -Source)

    length_ranges = lengths %>%
        filter(`pA length` > 0) %>%
        select(-Count) %>%
        tidyr$spread(Sample, Frequency) %>%
        mutate_at(vars(`1`, `2`), . -> runmean(., 5)) %>%
        mutate(Frequency = (`1` + `2`) / 2)

    p = ggplot(length_ranges) +
        aes(`pA length`, runmean(Frequency, 5), color = Type) +
        geom_line(size = 1) +
        geom_linerange(aes(ymin = runmean(`1`, 5), ymax = runmean(`2`, 5)),
                       alpha = 0.5) +
        scale_x_continuous(limits = c(0, 80),
                           breaks = c(1, seq(20, 80, by = 20))) +
        labs(x = 'polyÂ­A length', y = 'Fraction of reads (running mean)',
             color = 'Type')

    ggsave(args$plot, p, width = 5, height = 4)
})

# vim: ft=r
